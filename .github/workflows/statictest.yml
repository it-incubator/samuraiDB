name: Go static test and unit tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'db/golang/v1/**'
      - 'db/golang/v2/**'
      - '.github/workflows/**'

jobs:
  statictest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [v1, v2]
      fail-fast: false
    container:
      image: golang:1.23
    env:
      GOFLAGS: "-buildvcs=false"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Важно для получения всей истории git

      - name: Build statictest binary
        run: |
          cd db/golang/tools/statictest
          # Инициализируем модуль, если его еще нет
          if [ ! -f go.mod ]; then
            go mod init statictest
          fi
          # Добавляем зависимости
          go get github.com/jingyugao/rowserrcheck/passes/rowserr@latest
          go get github.com/timakin/bodyclose/passes/bodyclose@latest
          go get golang.org/x/tools/go/analysis@latest
          go get honnef.co/go/tools/simple@latest
          go get honnef.co/go/tools/staticcheck@latest
          go get honnef.co/go/tools/stylecheck@latest
          
          go mod tidy
          go generate -buildvcs=false ./...
          mkdir -p bin
          go build -buildvcs=false -o bin/statictest main.go
          chmod +x bin/statictest

      - name: Setup autotest binary
        run: |
          mkdir -p /usr/local/bin
          mv $GITHUB_WORKSPACE/db/golang/tools/statictest/bin/statictest /usr/local/bin/statictest
          chmod +x /usr/local/bin/statictest

      - name: Run statictest
        run: |
          cd db/golang/${{ matrix.version }}
          go vet -vettool=$(which statictest) ./...

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [v1, v2]
      fail-fast: false
    container:
      image: golang:1.23
    env:
      GOFLAGS: "-buildvcs=false"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          cd db/golang/${{ matrix.version }}
          go mod download

      - name: Run tests
        run: |
          cd db/golang/${{ matrix.version }}
          go test ./...