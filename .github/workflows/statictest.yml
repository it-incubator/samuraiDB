name: Go static test and unit tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'db/golang/v1/**'
      - 'db/golang/v2/**'
      - '.github/workflows/**'

jobs:
  statictest:
    runs-on: ubuntu-latest
    container:
      image: golang:1.23
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build statictest binary
        run: |
          cd db/golang/v1
          go get github.com/jingyugao/rowserrcheck/passes/rowserr
          go get github.com/timakin/bodyclose/passes/bodyclose
          go get golang.org/x/tools/go/analysis
          go get honnef.co/go/tools/simple
          go get honnef.co/go/tools/staticcheck
          go get honnef.co/go/tools/stylecheck
          go generate ./...
          go build -o ./bin/statictest ./pkg/statictest/main.go

      - name: Setup autotest binary
        run: |
          chmod +x $GITHUB_WORKSPACE/db/golang/v1/bin/statictest
          mv $GITHUB_WORKSPACE/db/golang/v1/bin/statictest /usr/local/bin/statictest

      - name: Run statictest for v1
        run: |
          cd db/golang/v1
          go vet -vettool=$(which statictest) ./...

  test:
    runs-on: ubuntu-latest
    container:
      image: golang:1.23

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          go mod tidy && go mod download
          (cd db/golang/v1 && go mod tidy && go mod download)
          (cd db/golang/v2 && go mod tidy && go mod download)

      - name: Run tests for v1
        run: go test -v ./db/golang/v1/...

      - name: Run tests for v2
        run: go test -v ./db/golang/v2/...